[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "ansible-alwaysdata"
dynamic = ["version"]
description = "Collection of modules for interacting with AlwaysData's HTTP API"
readme = "README.md"
license = { file = "LICENSE" }

authors = [
    { name = "Christophe Henry", email = "contact@c-henry.fr" }
]

classifiers = [
]

requires-python = ">= 3.9"

dependencies = [
    "ansible>=2.16.11",
]

[project.optional-dependencies]
dev = [
    "faker",
    "pre-commit",
    "build",
    "setuptools",
    "twine",
    "ruff",
    "ansible-dev-tools",
    "molecule-plugins[podman]",
]

[project.urls]
Homepage = "https://github.com/christophehenry/ansible-alwaysdata"
Documentation = "https://github.com/christophehenry/ansible-alwaysdata/blob/main/README.md"
Repository = "https://github.com/christophehenry/ansible-alwaysdata"
Issues = "https://github.com/christophehenry/ansible-alwaysdata/issues"

[tool.setuptools.dynamic]
version = { attr = "christophehenry.alwaysdata.__version__" }

[tool.setuptools.packages.find]
include = ["christophehenry.alwaysdata"]

[tool.ruff]
line-length = 100

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.isort]
force-sort-within-sections = true
section-order = [
    "future",
    "standard-library",
    "ansible",
    "first-party",
    "third-party",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
"ansible" = ["ansible"]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
filterwarnings = [
    'ignore:AnsibleCollectionFinder has already been configured',
]
